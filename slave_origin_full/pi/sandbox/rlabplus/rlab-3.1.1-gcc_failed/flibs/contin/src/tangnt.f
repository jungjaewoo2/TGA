      SUBROUTINE TANGNT(DETSN,FX,DF,FPAR,IERROR,IP,IPAR,IWORK,
     1 NVAR,RWORK,TAN,XR,LIW,LRW,SLNAME)
C
C***********************************************************************
C
C  TANGNT COMPUTES A UNIT TANGENT VECTOR TO THE SOLUTION
C  CURVE OF THE UNDERDETERMINED NONLINEAR SYSTEM FX = 0.  THE
C  TANGENT VECTOR TAN IS THE SOLUTION OF THE LINEAR SYSTEM
C
C        DFA(X,IPL)*TAN = E(NVAR)
C
C  HERE, E(I) ALWAYS DENOTES THE I-TH BASIS NATURAL BASIS VECTOR
C  IN NVAR-SPACE; THAT IS, THE VECTOR WITH A 1 IN THE I-TH
C  COMPONENT AND ZEROS ELSEWHERE. THEN DFA(X,IPL) IS THE
C  AUGMENTED JACOBIAN WHOSE FIRST NVAR-1 ROWS ARE DFX/DX (X), THE
C  DERIVATIVE OF FX EVELUATED AT X, AND WHOSE LAST ROW IS
C  THE TRANSPOSE OF E(IPL).
C
C  THE TANGENT VECTOR IS THEN NORMALIZED, BUT THE ADJUSTMENT
C  OF ITS SIGN IS PERFORMED OUTSIDE THE ROUTINE.
C
C  ERROR RETURNS  IERROR=1  DATA OR STORAGE ERROR
C                 IERROR=2  ERROR IN DERIVATIVE CALL
C                 IERROR=3  SOLVER FAILED
C                 IERROR=6  TANGENT VECTOR ZERO
C
      DOUBLE PRECISION ONE
      DOUBLE PRECISION ZERO
C
      PARAMETER (ONE=1.0)
      PARAMETER (ZERO=0.0)
C
      EXTERNAL  FX
      EXTERNAL  DF
      EXTERNAL  SLNAME
      EXTERNAL  DNRM2
      EXTERNAL  DSCAL
C
      INTEGER   LIW
      INTEGER   LRW
      INTEGER   NVAR
C
      DOUBLE PRECISION DETSN
      DOUBLE PRECISION FPAR(*)
      INTEGER   I
      INTEGER   IERROR
      INTEGER   IP
      INTEGER   IPAR(*)
      INTEGER   IWORK(LIW)
      INTEGER   JOB
      DOUBLE PRECISION RWORK(LRW)
      DOUBLE PRECISION SKALE
      DOUBLE PRECISION DNRM2
      DOUBLE PRECISION TAN(NVAR)
      DOUBLE PRECISION TNORM
      DOUBLE PRECISION XR(NVAR)
C
C  SET RIGHT HAND SIDE OF TANGENT SYSTEM
C
      DO 10 I=1,NVAR
        TAN(I)=ZERO
   10   CONTINUE
      TAN(NVAR)=ONE
C
C  CALL SOLVER
C
      JOB=0
      IF(IWORK(4).EQ.2)JOB=1
      CALL SLNAME(DETSN,FX,DF,FPAR,IERROR,IP,IPAR,IWORK,LIW,
     1JOB,NVAR,RWORK,LRW,XR,TAN)
      IF(IERROR.NE.0)RETURN
C
C  Normalize the tangent vector.
C
      TNORM=DNRM2(NVAR,TAN,1)
      IF(TNORM.EQ.ZERO)THEN
        IERROR=6
      ELSE
        SKALE=ONE/TNORM
        CALL DSCAL(NVAR,SKALE,TAN,1)
        IERROR=0
        ENDIF
      RETURN
      END 
