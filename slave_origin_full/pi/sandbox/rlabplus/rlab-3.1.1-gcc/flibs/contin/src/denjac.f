      SUBROUTINE DENJAC(EPS,FPAR,FPRIME,FX,IERROR,IPAR,IPC,IWORK,
     * JAC,LIW,LOUNIT,NVAR,X,WORK1,WORK2)
C
C************************************************************************
C
C  DENJAC ESTIMATES THE JACOBIAN FPRIME OF THE FUNCTION FX ASSUMING
C  THAT FULL (DENSE) STORAGE IS USED.  IT IS CALLED AUTOMATICALLY
C  BY DENSLV WHEN JAC=1 OR 2.
C
C  EPS    - A TOLERANCE TO USE FOR SHIFTING THE X VALUES.  
C           EPS=SQRT(MACHINE EPSILON) FOR THE VAX, OR
C           EPS=SQRT(SQRT(MACHINE EPSILON)) FOR THE PC 
C           HAVE BEEN FOUND SUITABLE.
C
C  FPAR   - USER REAL PARAMETER VECTOR, PASSED TO FX BUT NOT OTHERWISE
C           REFERENCED.
C
C  FPRIME - REAL(NVAR,NVAR), THE ARRAY INTO WHICH THE JACOBIAN WILL
C           BE STORED, INCLUDING THE LAST AUXILLIARY ROW.
C
C  FX     - EXTERNAL NAME OF USER ROUTINE DEFINING FUNCTION, OF THE
C           FORM SUBROUTINE FX(NVAR,FPAR,IPAR,X,F,IERROR).
C
C  IERROR - ERROR RETURN FLAG.  IERROR NONZERO MEANS THERE WAS A PROBLEM
C           IN THE USER ROUTINE FX OR IN DENJAC.
C
C  IPAR   - USER INTEGER PARAMETER VECTOR, PASSED TO FX BUT NOT OTHERWISE
C           REFERENCED.
C
C  IPC    - INDEX OF CURRENT CONTINUATION PARAMETER, DETERMINES FORM OF
C           LAST ROW OF JACOBIAN.
C
C  IWORK  - INTEGER WORK VECTOR OF DIMENSION LIW.  ONLY REQUIRED IN ORDER
C           TO UPDATE IWORK(22), WHICH COUNTS FUNCTION EVALUATIONS.
C
C  JAC    - USER DEFINED JACOBIAN OPTION.  0 MEANS USER SUPPLIES JACOBIAN.
C           1 MEANS USE FORWARD, 2 MEANS USE CENTRAL DIFFERENCES TO
C           ESTIMATE JACOBIAN FROM FX.
C
C  LIW    - DIMENSION OF IWORK.
C
C  LOUNIT - OUTPUT UNIT.
C
C  NVAR   - DIMENSION OF X, FPRIME, WORK1, WORK2.  THE NUMBER OF VARIABLES.
C
C  X      - POINT AT WHICH JACOBIAN IS TO BE ESTIMATED.
C
C  WORK1  - WORK VECTOR OF DIMENSION NVAR.
C
C  WORK2  - WORK VECTOR OF DIMENSION NVAR.
C
      DOUBLE PRECISION ONE
      DOUBLE PRECISION ZERO
C
      PARAMETER (ONE=1.0)
      PARAMETER (ZERO=0.0)
C
      EXTERNAL  FX
      EXTERNAL  DAXPY
      EXTERNAL  DSCAL
C
      INTRINSIC ABS
C
      INTEGER   LIW
      INTEGER   NVAR
C
      DOUBLE PRECISION DELM
      DOUBLE PRECISION DELP
      DOUBLE PRECISION EPS
      DOUBLE PRECISION FPAR(*)
      DOUBLE PRECISION FPRIME(NVAR,NVAR)
      INTEGER   IPAR(*)
      INTEGER   IERROR
      INTEGER   IPC
      INTEGER   IWORK(LIW)
      INTEGER   J
      INTEGER   JAC
      INTEGER   LOUNIT
      DOUBLE PRECISION SKALE
      DOUBLE PRECISION X(NVAR)
      DOUBLE PRECISION XSAVE
      DOUBLE PRECISION WORK1(NVAR)
      DOUBLE PRECISION WORK2(NVAR)
C
      IF(JAC.EQ.1)THEN
        CALL FX(NVAR,FPAR,IPAR,X,WORK2,IERROR)
        DELM=ZERO
        IWORK(22)=IWORK(22)+1
        IF(IERROR.NE.0)RETURN
        ENDIF
C
      DO 20 J=1,NVAR
        XSAVE=X(J)
        DELP=EPS*(ONE+ABS(X(J)))
        X(J)=X(J)+DELP
        CALL FX(NVAR,FPAR,IPAR,X,WORK1,IERROR)
        IWORK(22)=IWORK(22)+1
        IF(IERROR.NE.0)RETURN
        IF(JAC.EQ.2)THEN
          DELM=-DELP
          X(J)=XSAVE+DELM
          CALL FX(NVAR,FPAR,IPAR,X,WORK2,IERROR)
          IWORK(22)=IWORK(22)+1
          IF(IERROR.NE.0)RETURN
          ENDIF
        X(J)=XSAVE
C
C  Compute DFDX(*,J)= (F(X+)-F(X-))/DELX.
C  Note that we contrive to ADD this quantity to DFDX,
C  This makes it possible to use this routine also to check
C  the accuracy of the user's jacobian routine.
C
        SKALE=-ONE
        CALL DAXPY(NVAR-1,SKALE,WORK2,1,WORK1,1)
        SKALE=ONE/(DELP-DELM)
        CALL DSCAL(NVAR-1,SKALE,WORK1,1)
        SKALE=ONE
        CALL DAXPY(NVAR-1,SKALE,WORK1,1,FPRIME(1,J),1)
20      CONTINUE
C
      FPRIME(NVAR,IPC)=FPRIME(NVAR,IPC)+ONE
      RETURN
      END
